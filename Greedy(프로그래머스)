#include <string>
#include <vector>
#include <algorithm>

using namespace std;

int solution(int n, vector<int> lost, vector<int> reserve) {
    int student = 0;
    int index = 0;
    
    vector <int> v;
    
    for (int i= 0; i < n; i++){
        v.push_back(1);
    }
    
    for (int i = 0; i < reserve.size(); i++){
        index = reserve[i];
        v[index-1] += 1;
    }
    
    for (int i = 0; i < lost.size(); i++){
        index = lost[i];
        
        v[index-1] -= 1;
    }
    
    sort(lost.begin(), lost.end());
    for (int i = 0; i < lost.size(); i++) {
        index = lost[i];
        
        if((v[index-1] == 0) && (v[index-2]==2)) {
            v[index-1] += 1;
            v[index-2] -= 1;
        }
        else if ((v[index-1]==0) && (v[index]==2)) {
            v[index-1] += 1;
            v[index] -= 1;
        }
    }
    
    for(int j = 0; j < n; j++){
        if(v[j] >= 1){
            student += 1;
        }
    }
    
    return student;
}
